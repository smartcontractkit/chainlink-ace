name: Create GH Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true

jobs:
  verify-version:
    name: Verify version
    runs-on: ubuntu-latest
    steps:
      - name: Check if version is valid
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Please use semantic versioning (e.g., 1.0.0)."
            exit 1
          fi

  update-package-json-version:
    name: Update package.json Version
    needs: verify-version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.CREATE_GH_RELEASE_WORKFLOW_DEPLOY_KEY }} # this key is used to push changes back to the repo, must have write access

    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # V4.1.0
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Update package.json version
      run: pnpm version --no-git-tag-version --allow-same-version ${{ inputs.version }}

    - name: Confirm version change
      id: check-git
      run: |
        git diff --exit-code package.json || echo "git_commit_needed=true" >> $GITHUB_ENV

    - name: Commit and push version changes
      if: env.git_commit_needed == 'true'
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@users.noreply.github.com"
        git add package.json
        git commit -m "chore: update package.json to version ${{ inputs.version }} for release"
        git push

  create-release:
    name: Create GH release
    needs: update-package-json-version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create GH Release
        id: create-release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          tag_name: v${{ inputs.version }}
          generate_release_notes: true